{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/Contact/contact.component.html","/./src/app/Home/home.component.html","/./src/app/Services/services.component.html","/./src/app/app.component.html","/./src/app/Contact/contact.component.ts","/./src/app/Home/home.component.ts","/./src/app/Services/services.component.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,wC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,qQ;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAG,SAAS;YACpB,uJAAwC;SAC3C,CAAC;OAEW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;ACPa;AAO1C;IAAA;IAA4B,CAAC;IAAhB,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAG,MAAM;YACjB,8IAAqC;SACxC,CAAC;OAEW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;ACPgB;AAO1C;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAG,UAAU;YACrB,0JAAyC;SAC5C,CAAC;OAEW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACP9B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;IACzB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AACO;AACT;AACR;AACoB;AACH;AAE/D,IAAM,MAAM,GAAY;IACtB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAG,8EAAiB;KAC9B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;KAC5B;CACF,CAAC;AAUF;IAAA;IAAyB,CAAC;IAAb,SAAS;QARrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa,EAAE,0DAAW,EAAE,qEAAgB,EAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC3E;YACD,YAAY,EAAG,CAAC,2DAAY,EAAE,kEAAa,EAAE,8EAAiB,EAAE,2EAAgB,CAAC;YACjF,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OAEW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACjCtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Contact Page</h1>\"","module.exports = \"<h1>Home Page</h1>\"","module.exports = \"<h1>Services Page</h1>\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav>\\n    <a routerLink=\\\"\\\">Home</a>\\n    <a routerLink=\\\"/services\\\">Services</a>\\n    <a routerLink='/contact'>Contact</a>\\n  </nav>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector : 'contact',\r\n    templateUrl : './contact.component.html'\r\n})\r\n\r\nexport class ContactComponent {}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector : 'home',\r\n    templateUrl : './home.component.html'\r\n})\r\n\r\nexport class HomeComponent {}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector : 'services',\r\n    templateUrl : './services.component.html'\r\n})\r\n\r\nexport class ServicesComponent {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PortfolioApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { HomeComponent } from './Home/home.component';\nimport { AppComponent} from './app.component';\nimport { ServicesComponent } from './Services/services.component';\nimport { ContactComponent } from './Contact/contact.component';\n\nconst routes : Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'services',\n    component : ServicesComponent\n  },\n  {\n    path: 'contact',\n    component: ContactComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    BrowserModule, FormsModule, HttpClientModule, RouterModule.forRoot(routes)\n  ],\n  declarations : [AppComponent, HomeComponent, ServicesComponent, ContactComponent],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}